# Example environment configuration for scheduled-db cluster
# Copy this file to .env and modify as needed

# =============================================================================
# CLUSTER CONFIGURATION
# =============================================================================

# Number of nodes in the cluster
CLUSTER_SIZE=3

# Cluster name (for identification)
CLUSTER_NAME=scheduled-db-cluster

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Host for Raft communication (use 0.0.0.0 for all interfaces)
RAFT_HOST=127.0.0.1

# Host for HTTP API (empty means all interfaces, localhost for local only)
HTTP_HOST=

# Base port for Raft communication (increments for each node)
# Node 1: BASE_RAFT_PORT, Node 2: BASE_RAFT_PORT+1, etc.
BASE_RAFT_PORT=12000

# Base port for HTTP API (increments for each node)
# Node 1: BASE_HTTP_PORT, Node 2: BASE_HTTP_PORT+1, etc.
BASE_HTTP_PORT=12080

# Offset to calculate HTTP port from Raft port (fallback)
HTTP_PORT_OFFSET=80

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Base directory for node data (each node gets subdirectory)
DATA_BASE_DIR=./data

# Base directory for logs
LOG_BASE_DIR=./logs

# =============================================================================
# NODE-SPECIFIC CONFIGURATION
# =============================================================================

# Individual node configurations (optional, overrides calculated values)
# Format: CLUSTER_NODE_N=raft_host:raft_port,http_host:http_port
# These are automatically generated if not specified

# CLUSTER_NODE_1=127.0.0.1:12000,127.0.0.1:12080
# CLUSTER_NODE_2=127.0.0.1:12001,127.0.0.1:12081
# CLUSTER_NODE_3=127.0.0.1:12002,127.0.0.1:12082

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Time gap between slot intervals
SLOT_GAP=10s

# Discovery strategy (static, kubernetes, dns, gossip, or empty for none)
DISCOVERY_STRATEGY=

# =============================================================================
# DEVELOPMENT PROFILES
# =============================================================================

# Uncomment one of these profiles for quick setup:

# Profile: Local Development (default)
# RAFT_HOST=127.0.0.1
# HTTP_HOST=
# BASE_RAFT_PORT=12000
# BASE_HTTP_PORT=12080

# Profile: Docker/Container
# RAFT_HOST=0.0.0.0
# HTTP_HOST=0.0.0.0
# BASE_RAFT_PORT=7000
# BASE_HTTP_PORT=8000

# Profile: Production-like
# RAFT_HOST=0.0.0.0
# HTTP_HOST=0.0.0.0
# BASE_RAFT_PORT=9000
# BASE_HTTP_PORT=9080
# CLUSTER_SIZE=5

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Host to use for testing (usually localhost or 127.0.0.1)
TEST_HOST=localhost

# =============================================================================
# USAGE EXAMPLES
# =============================================================================

# 1. Basic 3-node cluster on localhost:
#    cp .env.example .env
#    ./start-cluster-env.sh

# 2. 5-node cluster:
#    CLUSTER_SIZE=5 ./start-cluster-env.sh

# 3. Different ports:
#    BASE_RAFT_PORT=7000 BASE_HTTP_PORT=8000 ./start-cluster-env.sh

# 4. All interfaces (for Docker/remote access):
#    RAFT_HOST=0.0.0.0 HTTP_HOST=0.0.0.0 ./start-cluster-env.sh

# 5. Custom node mapping:
#    export CLUSTER_NODE_1=192.168.1.10:7000,192.168.1.10:8000
#    export CLUSTER_NODE_2=192.168.1.11:7000,192.168.1.11:8000
#    export CLUSTER_NODE_3=192.168.1.12:7000,192.168.1.12:8000
#    ./start-cluster-env.sh
